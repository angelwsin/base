spring
   IOC  程序不应该依赖于实现而应该依赖于抽象接口
   
   
   spring 任务调度  也可以使用注解
   <!-- 如下实现是通过线程池执行的 -->
     <task:executor id="executor" pool-size="10"/>
    <task:scheduler id="scheduler" pool-size="10"/>
    <task:annotation-driven scheduler="scheduler" executor="executor" proxy-target-class="true"/> -->

    <task:scheduled-tasks scheduler="scheduler">
        <!--自动清理删除的关系 每天2点执行执行 -->
        <task:scheduled ref="relationClearTask" method="autoClearRelation" cron="0 0 2 * * ?"/>
        <!--自动清理删除的关系 每天2点30执行-->
        <task:scheduled ref="messageClearTask" method="autoClearExpiredOrDeletedmMessage" cron="0 30 2 * * ?"/>
    </task:scheduled-tasks>
    
    
     <!-- 使用SimpleMappingExceptionResolver实现异常处理  -->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">  
        <!-- 定义默认的异常处理页面，当该异常类型的注册时使用 -->  
        <property name="defaultErrorView" value="page/error"></property>  
        <!-- 定义异常处理页面用来获取异常信息的变量名，默认名为exception -->  
        <property name="exceptionAttribute" value="ex"></property>  
        <!-- 定义需要特殊处理的异常，用类名或完全路径名作为key，异常也页名作为值 -->  
        <property name="exceptionMappings">  
            <props>  
                <!-- <prop key="cn.basttg.core.exception.BusinessException">error-business</prop>  
                <prop key="cn.basttg.core.exception.ParameterException">error-parameter</prop> -->  
      
                <!-- 这里还可以继续扩展对不同异常类型的处理 -->  
            </props>  
        </property>  
    </bean>  
         